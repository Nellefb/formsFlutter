import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    const appTitle = 'Form Demo';

    return MaterialApp(
      title: appTitle,
      home: Scaffold(
        appBar: AppBar(
          title: const Text(appTitle),
        ),
        body: const MyCustomForm(),
      ),
    );
  }
}

// Define a custom Form widget.
class MyCustomForm extends StatefulWidget {
  const MyCustomForm({Key? key}) : super(key: key);

  @override
  MyCustomFormState createState() {
    return MyCustomFormState();
  }
}

// Define a corresponding State class.
class MyCustomFormState extends State<MyCustomForm> {
  String nome = '';
  String sobrenome = '';
  String email = '';
  String senha = '';
  final passwordController = TextEditingController();
  final emailController = TextEditingController();
  final nomeController = TextEditingController();
  final sobrenomeController = TextEditingController();
  bool _obscurePassword = true;

  // Chave única para todo o app
  final formKey = GlobalKey<FormState>();

  @override
  Widget build(BuildContext context) {
    return Form(
      key: formKey,
      child: ListView(
        padding: const EdgeInsets.all(32),
        children: <Widget>[
          buildNome(),
          const SizedBox(height: 24),
          buildSobrenome(),
          const SizedBox(height: 24),
          buildEmail(),
          const SizedBox(height: 24),
          buildPassword(),
          const SizedBox(height: 24),
          ElevatedButton(
            onPressed: () {
              bool valid = formKey.currentState!.validate();
              if (valid) {
                // Salvar dados
                nome = nomeController.text;
                sobrenome = sobrenomeController.text;
                email = emailController.text;
                senha = passwordController.text;

                // Navegar para a nova tela
                Navigator.push(
                  context,
                  MaterialPageRoute(
                    builder: (context) => DetailsPage(
                      nome: nome,
                      sobrenome: sobrenome,
                      email: email,
                      senha: senha,
                    ),
                  ),
                );
              }
            },
            child: const Text('Submit'),
          )
        ],
      ),
    );
  }

  Widget buildNome() => TextFormField(
        controller: nomeController,
        validator: (value) {
          if (value == null || value.isEmpty) {
            return 'Informe o Nome';
          }
          return null;
        },
        decoration: InputDecoration(
          labelText: 'Nome',
          border: const OutlineInputBorder(),
          prefixIcon: const Icon(Icons.person),
        ),
      );

  Widget buildSobrenome() => TextFormField(
        controller: sobrenomeController,
        validator: (value) {
          if (value == null || value.isEmpty) {
            return 'Informe o Sobrenome';
          }
          return null;
        },
        decoration: InputDecoration(
          labelText: 'Sobrenome',
          border: const OutlineInputBorder(),
          prefixIcon: const Icon(Icons.person),
        ),
      );

  Widget buildEmail() => TextFormField(
        validator: (value) {
          if (value == null || value.isEmpty) {
            return 'Informe o email';
          } else if (!value.contains('@')) {
            return 'E-mail deve conter @';
          }
          return null;
        },
        controller: emailController,
        decoration: InputDecoration(
          hintText: 'name@example.com',
          labelText: 'E-mail',
          border: const OutlineInputBorder(),
          prefixIcon: const Icon(Icons.email),
          suffixIcon: IconButton(
            icon: const Icon(Icons.close),
            onPressed: () {
              emailController.clear();
            },
          ),
        ),
        keyboardType: TextInputType.emailAddress,
      );

  Widget buildPassword() => TextFormField(
        validator: (value) {
          if (value == null || value.isEmpty) {
            return 'Informe a Senha';
          } else if (value.length < 6) {
            return 'A senha deve ter no mínimo 6 caracteres';
          }
          return null;
        },
        obscureText: _obscurePassword,
        decoration: InputDecoration(
          hintText: 'Sua Senha...',
          labelText: 'Senha',
          border: const OutlineInputBorder(),
          suffixIcon: IconButton(
            onPressed: _togglePasswordView,
            icon: Icon(
              _obscurePassword
                  ? Icons.visibility
                  : Icons.visibility_off,
            ),
          ),
        ),
      );

  void _togglePasswordView() {
    setState(() {
      _obscurePassword = !_obscurePassword;
    });
  }
}

// Nova tela para exibir os dados
class DetailsPage extends StatelessWidget {
  final String nome;
  final String sobrenome;
  final String email;
  final String senha;

  const DetailsPage({
    Key? key,
    required this.nome,
    required this.sobrenome,
    required this.email,
    required this.senha,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Detalhes'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: <Widget>[
            Text('Nome: $nome', style: TextStyle(fontSize: 18)),
            SizedBox(height: 8),
            Text('Sobrenome: $sobrenome', style: TextStyle(fontSize: 18)),
            SizedBox(height: 16),
            Text('E-mail: $email', style: TextStyle(fontSize: 18)),
            SizedBox(height: 16),
            Text('Senha: $senha', style: TextStyle(fontSize: 18)),
          ],
        ),
      ),
    );
  }
}
